# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ibWSu8hJhr87sBaOzePSs0aW4teH8A-b
"""

import streamlit as st
from langchain_community.document_loaders import PyPDFLoader, TextLoader, Docx2txtLoader
from langchain.vectorstores import FAISS
from langchain.embeddings import OpenAIEmbeddings
from langchain.llms import OpenAI
from langchain.chains import RetrievalQA
import os

# Set up OpenAI API key (use your own key)

# Load API key securely
import streamlit as st
import os

# Load API key securely
openai_api_key = st.secrets["OPENAI_API_KEY"]
os.environ["OPENAI_API_KEY"] = openai_api_key

# Streamlit UI
st.title("ðŸ“„ Chat with Your Documents (RAG)")

# File uploader
uploaded_files = st.file_uploader("Upload Documents (PDF, TXT, DOCX)", type=["pdf", "txt", "docx"], accept_multiple_files=True)

# Process uploaded files
doc_texts = []
if uploaded_files:
    for uploaded_file in uploaded_files:
        file_extension = uploaded_file.name.split(".")[-1]

        if file_extension == "pdf":
            loader = PyPDFLoader(uploaded_file)
        elif file_extension == "txt":
            loader = TextLoader(uploaded_file)
        elif file_extension == "docx":
            loader = Docx2txtLoader(uploaded_file)  # Updated import
        else:
            st.error("Unsupported file format!")
            continue

        docs = loader.load()
        doc_texts.extend(docs)

    st.success("Documents loaded successfully!")

    # Convert to embeddings & create FAISS index
    embeddings = OpenAIEmbeddings()
    vectorstore = FAISS.from_documents(doc_texts, embeddings)
    retriever = vectorstore.as_retriever()

    # Set up QA chain
    qa_chain = RetrievalQA.from_chain_type(llm=OpenAI(), retriever=retriever)

    # Chat interface
    user_query = st.text_input("Ask a question about the document:")
    if user_query:
        response = qa_chain.run(user_query)
        st.write("**Response:**", response)

st.markdown("---")
st.info("Powered by OpenAI & LangChain")
